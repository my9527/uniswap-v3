{"version":3,"file":"static/js/278.73c9e0d7.chunk.js","mappings":"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","sources":["nft/types/airdrop/index.ts","components/AirdropModal/index.tsx","nft/queries/genie/GetAirdorpMerkle.ts"],"sourcesContent":["export enum Airdrop {\n  LOOKS_RARE_NFT_COMMERCE_REWARDS = 'LOOKS_RARE_NFT_COMMERCE_REWARDS',\n  GENIE_UNISWAP_USDC_AIRDROP = 'GENIE_UNISWAP_USDC_AIRDROP',\n}\n\nexport interface Rewards {\n  amount: string\n  walletAddress: string\n  tokenAddress: string\n  merkleProof: Array<string>\n  rewardType: Airdrop\n  chainId: number\n  index: number\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport uniswapNftAirdropClaim from 'abis/uniswap-nft-airdrop-claim.json'\nimport airdropBackgroundv2 from 'assets/images/airdopBackground.png'\nimport { ButtonEmphasis, ButtonSize, ThemeButton } from 'components/Button'\nimport { OpacityHoverState } from 'components/Common'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport { useContract } from 'hooks/useContract'\nimport { ChevronRightIcon } from 'nft/components/icons'\nimport { useIsNftClaimAvailable } from 'nft/hooks/useIsNftClaimAvailable'\nimport { CollectionRewardsFetcher } from 'nft/queries/genie/GetAirdorpMerkle'\nimport { Airdrop, Rewards } from 'nft/types/airdrop'\nimport { useEffect, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useModalIsOpen, useToggleModal } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\nimport styled from 'styled-components'\nimport { CloseIcon, ThemedText } from 'theme'\n\nimport Modal from '../Modal'\n\nconst ModalWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Body = styled.div`\n  padding: 28px 20px 20px 20px;\n`\n\nconst ClaimButton = styled(ThemeButton)`\n  width: 100%;\n  background-color: ${({ theme }) => theme.accentAction};\n  border-radius: 12px;\n  color: ${({ theme }) => theme.white};\n`\n\nconst Line = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.white};\n  opacity: 0.24;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`\n\nconst LinkWrap = styled.a`\n  text-decoration: none;\n  ${OpacityHoverState}\n`\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst StyledImage = styled.img`\n  width: 100%;\n  height: 170px;\n`\n\nconst USDCLabel = styled.div`\n  font-weight: 700;\n  font-size: 36px;\n  line-height: 44px;\n  margin-top: 8px;\n  color: white;\n`\n\nconst TextContainer = styled.div`\n  position: absolute;\n  left: 16px;\n  top: 16px;\n  right: 16px;\n`\n\nconst RewardsDetailsContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`\n\nconst CurrencyText = styled.span`\n  color: white;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 14.5px;\n`\n\nconst ClaimContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  height: 380px;\n  padding: 60px 28px;\n  padding-bottom: 20px;\n`\n\nconst SuccessText = styled.div`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  margin-top: 24px;\n  margin-bottom: 8px;\n`\n\nconst EtherscanLink = styled.a`\n  text-decoration: none;\n\n  ${OpacityHoverState}\n`\n\nconst CloseButton = styled(ThemeButton)`\n  max-width: 68px;\n  margin-top: auto;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst SyledCloseIcon = styled(CloseIcon)`\n  float: right;\n  height: 24px;\n\n  ${OpacityHoverState}\n`\n\nconst Error = styled.div`\n  display: flex;\n  color: ${({ theme }) => theme.accentCritical};\n  font-weight: 500;\n  line-height: 24px;\n  border-radius: 16px;\n  padding: 12px 20px;\n  font-size: 14px;\n  align-items: center;\n  gap: 12px;\n`\n\nconst ReactLinkWrap = styled.div`\n  margin-bottom: 40px;\n`\n\nconst RewardsText = styled.span`\n  font-size: 12px;\n  line-height: 16px;\n  color: ${({ theme }) => theme.white};\n\n  &:first-child {\n    margin-bottom: 8px;\n  }\n`\n\nconst RewardsInformationText = styled.span`\n  display: inline-block;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${({ theme }) => theme.textPrimary};\n  margin-bottom: 28px;\n`\n\nconst MainHeader = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  color: ${({ theme }) => theme.white};\n`\n\nconst EtherscanLinkWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`\n\nenum RewardAmounts {\n  tradingRewardAmount = 300,\n  holderRewardAmount = 1000,\n  combinedAmount = 1300,\n}\n\nconst AirdropModal = () => {\n  const { account, provider } = useWeb3React()\n  const [claim, setClaim] = useState<Rewards>()\n  const [isClaimed, setIsClaimed] = useState(false)\n  const [hash, setHash] = useState('')\n  const [error, setError] = useState(false)\n  const setIsClaimAvailable = useIsNftClaimAvailable((state) => state.setIsClaimAvailable)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [totalAmount, setTotalAmount] = useState(0)\n  const isOpen = useModalIsOpen(ApplicationModal.UNISWAP_NFT_AIRDROP_CLAIM)\n  const usdcAirdropToggle = useToggleModal(ApplicationModal.UNISWAP_NFT_AIRDROP_CLAIM)\n  const contract = useContract(UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS, uniswapNftAirdropClaim)\n\n  const displayError = () => {\n    setIsSubmitting(false)\n    setError(true)\n    setTimeout(() => {\n      setError(false)\n    }, 5000)\n  }\n\n  useEffect(() => {\n    if (account && provider && contract) {\n      ;(async () => {\n        try {\n          const { data } = await CollectionRewardsFetcher(account)\n          const claim = data.find((claim) => claim?.rewardType === Airdrop.GENIE_UNISWAP_USDC_AIRDROP)\n\n          if (!claim) return\n\n          const [isClaimed] = await contract.connect(provider).functions.isClaimed(claim?.index)\n\n          if (claim && isClaimed === false) {\n            const usdAmount = BigNumber.from(claim.amount).div(10 ** 6)\n            setClaim(claim)\n            setTotalAmount(usdAmount.toNumber())\n            setIsClaimAvailable(true)\n          }\n        } catch (err) {\n          displayError()\n        }\n      })()\n    }\n  }, [account, contract, provider, setIsClaimAvailable])\n\n  const makeClaim = async () => {\n    try {\n      if (contract && claim && claim.amount && claim.merkleProof && provider) {\n        setIsSubmitting(true)\n\n        const response: TransactionResponse = await contract\n          .connect(provider?.getSigner())\n          .functions.claim(claim.index, account, claim?.amount, claim?.merkleProof)\n\n        await response.wait()\n\n        setHash(response.hash)\n        setIsSubmitting(false)\n        setIsClaimed(true)\n        setIsClaimAvailable(false)\n      }\n    } catch (err) {\n      setIsSubmitting(false)\n      displayError()\n    }\n  }\n\n  return (\n    <>\n      <Modal hideBorder isOpen={isOpen} onDismiss={usdcAirdropToggle} maxHeight={90} maxWidth={400}>\n        <ModalWrap>\n          {isClaimed ? (\n            <ClaimContainer>\n              <ThemedText.HeadlineSmall>Congratulations!</ThemedText.HeadlineSmall>\n              <SuccessText>\n                You have successfully claimed {totalAmount} USDC. Thank you for supporting Genie.xyz.\n              </SuccessText>\n              <EtherscanLink href={`https://etherscan.io/tx/${hash}`} target=\"_blank\">\n                <ThemedText.Link>\n                  <EtherscanLinkWrap>\n                    <span>Etherscan</span>\n                    <ChevronRightIcon />\n                  </EtherscanLinkWrap>\n                </ThemedText.Link>\n              </EtherscanLink>\n\n              <CloseButton size={ButtonSize.medium} emphasis={ButtonEmphasis.medium} onClick={usdcAirdropToggle}>\n                Close\n              </CloseButton>\n            </ClaimContainer>\n          ) : (\n            <>\n              <ImageContainer>\n                <TextContainer>\n                  <SyledCloseIcon onClick={usdcAirdropToggle} stroke=\"white\" />\n                  <MainHeader>Uniswap NFT Airdrop</MainHeader>\n                  <USDCLabel>{totalAmount} USDC</USDCLabel>\n                  <Line />\n                  <RewardsDetailsContainer>\n                    <RewardsText>Trading rewards</RewardsText>{' '}\n                    <CurrencyText>\n                      {totalAmount === RewardAmounts.tradingRewardAmount || totalAmount === RewardAmounts.combinedAmount\n                        ? `${RewardAmounts.tradingRewardAmount} USDC`\n                        : '0'}\n                    </CurrencyText>\n                  </RewardsDetailsContainer>\n                  <RewardsDetailsContainer>\n                    <RewardsText>Genie NFT holder rewards</RewardsText>{' '}\n                    <CurrencyText>\n                      {totalAmount !== RewardAmounts.tradingRewardAmount\n                        ? `${RewardAmounts.holderRewardAmount} USDC`\n                        : '0'}\n                    </CurrencyText>\n                  </RewardsDetailsContainer>\n                </TextContainer>\n                <StyledImage src={airdropBackgroundv2} />\n              </ImageContainer>\n              <Body>\n                <RewardsInformationText>\n                  As a long time supporter of Genie, you’ve been awarded {totalAmount} USDC tokens.\n                </RewardsInformationText>\n                <ReactLinkWrap>\n                  <LinkWrap href=\"https://uniswap.org/blog/uniswap-nft-aggregator-announcement\" target=\"_blank\">\n                    <ThemedText.Link>Read more about Uniswap NFT.</ThemedText.Link>\n                  </LinkWrap>\n                </ReactLinkWrap>\n\n                {error && (\n                  <Error>\n                    <AlertTriangle />\n                    Claim USDC failed. Please try again later\n                  </Error>\n                )}\n\n                <ClaimButton\n                  onClick={makeClaim}\n                  size={ButtonSize.medium}\n                  emphasis={ButtonEmphasis.medium}\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting && <Loader stroke=\"white\" />}\n                  <span>Claim{isSubmitting && 'ing'} USDC</span>\n                </ClaimButton>\n              </Body>\n            </>\n          )}\n        </ModalWrap>\n      </Modal>\n    </>\n  )\n}\n\nexport default AirdropModal\n","import { Rewards } from 'nft/types/airdrop'\n\ninterface CollectionrRewardsResponse {\n  data: Array<Rewards>\n}\n\nexport const CollectionRewardsFetcher = async (address: string): Promise<CollectionrRewardsResponse> => {\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/rewards/${address}?category=GENIE_UNISWAP_USDC_AIRDROP`\n\n  const controller = new AbortController()\n\n  const timeoutId = setTimeout(() => controller.abort(), 3000)\n\n  const r = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  clearInterval(timeoutId)\n  const data = await r.json()\n\n  return data\n}\n"],"names":["Airdrop","RewardAmounts","CollectionRewardsFetcher","address","url","process","REACT_APP_TEMP_API_URL","controller","AbortController","timeoutId","setTimeout","abort","r","fetch","method","headers","clearInterval","data","json","LOOKS_RARE_NFT_COMMERCE_REWARDS","GENIE_UNISWAP_USDC_AIRDROP","ModalWrap","styled","div","Body","ClaimButton","ThemeButton","theme","accentAction","white","Line","LinkWrap","a","OpacityHoverState","ImageContainer","StyledImage","img","USDCLabel","TextContainer","RewardsDetailsContainer","CurrencyText","span","ClaimContainer","SuccessText","EtherscanLink","CloseButton","SyledCloseIcon","CloseIcon","Error","accentCritical","ReactLinkWrap","RewardsText","RewardsInformationText","textPrimary","MainHeader","EtherscanLinkWrap","tradingRewardAmount","holderRewardAmount","combinedAmount","account","provider","useWeb3React","claim","setClaim","useState","isClaimed","setIsClaimed","hash","setHash","error","setError","setIsClaimAvailable","useIsNftClaimAvailable","state","isSubmitting","setIsSubmitting","totalAmount","setTotalAmount","isOpen","useModalIsOpen","ApplicationModal","UNISWAP_NFT_AIRDROP_CLAIM","usdcAirdropToggle","useToggleModal","contract","useContract","UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS","uniswapNftAirdropClaim","displayError","useEffect","find","rewardType","connect","functions","index","usdAmount","BigNumber","from","amount","toNumber","err","makeClaim","merkleProof","response","getSigner","wait","Modal","hideBorder","onDismiss","maxHeight","maxWidth","ThemedText","HeadlineSmall","href","target","Link","ChevronRightIcon","size","ButtonSize","medium","emphasis","ButtonEmphasis","onClick","stroke","src","airdropBackgroundv2","AlertTriangle","disabled","Loader"],"sourceRoot":""}